{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RM-PC\\\\Desktop\\\\Documents\\\\Development\\\\Eclipse\\\\allocation\\\\src\\\\components\\\\modals\\\\shiftPattern.jsx\";\nimport React, { Component } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport Staffing from \"./staffing\";\nimport \"../../modal.css\";\nimport { existsTypeAnnotation } from \"@babel/types\";\n\nclass ShiftPattern extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shiftTimeOfDay: \"Day\",\n      shiftStartTime: \"08:00\",\n      shiftEndTime: \"20:00\",\n      isReadyToClose: false\n    };\n    this.handleShiftTypeChange = this.handleShiftTypeChange.bind(this);\n    this.handleContinue = this.handleContinue.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" Open Modal \"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, close => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-center header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Progress\"), React.createElement(\"progress\", {\n      value: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Please fill in all fields.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Day or Night shift:\")), React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      selected: this.state.shiftTimeOfDay,\n      onChange: this.handleShiftTypeChange,\n      name: \"Shift type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"option\", {\n      value: \"Night\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Night\")))), React.createElement(\"div\", {\n      class: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Shift start time:\")), React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: value => this.shiftStartTime = value,\n      step: \"3600\",\n      type: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Shift end time:\")), React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: value => this.shiftEndTime = value,\n      step: \"3600\",\n      type: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"wrapper text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Previous\")), React.createElement(\"div\", {\n      class: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleContinue(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Continue\"))), React.createElement(\"button\", {\n      ref: \"closeButton\",\n      onClick: () => {\n        console.log(\"modal closed \");\n        {\n          this.state.isReadyToClose === true && close();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" test\"))));\n  }\n\n  handleShiftTypeChange(uiObj) {\n    //Day/Night from UI element\n    const value = uiObj.target.value; //Set user input to state\n\n    this.setState({\n      shiftTimeOfDay: value\n    }); //TODO: ShiftPattern.jsx --> Set default time\n  }\n\n  handleContinue() {\n    //Get values from UI element\n    const shiftStartTime = this.shiftStartTime.value;\n    const shiftEndTime = this.shiftEndTime.value;\n    console.log(shiftStartTime + \" - \" + shiftEndTime); //Validation\n\n    if (this.state.shiftTimeOfDay.value === \"Day\") {\n      if (shiftStartTime > shiftEndTime) {\n        console.log(\"End time can't be before start time with current shift type. Solution: 1. You may have put wrong shift type (day/night). 2. You may switched AM/PM at time box. 3. Times may be incorrect.\");\n        return;\n      }\n    } else {\n      if (shiftStartTime < shiftEndTime) {\n        console.log(\"Start time can't be before end time with current shift type. Solution: 1. You may have put wrong shift type (day/night). 2. You may switched AM/PM at time box. 3. Times may be incorrect.\");\n        return;\n      }\n    } //Save variables to state\n\n\n    this.setState({\n      shiftStartTime: shiftStartTime\n    });\n    this.setState({\n      shiftEndTime: shiftEndTime\n    }); //Flag to allow user to close modal\n\n    this.setState({\n      isReadyToClose: true\n    });\n  }\n\n}\n\nexport default ShiftPattern;","map":{"version":3,"sources":["C:/Users/RM-PC/Desktop/Documents/Development/Eclipse/allocation/src/components/modals/shiftPattern.jsx"],"names":["React","Component","Popup","Staffing","existsTypeAnnotation","ShiftPattern","constructor","props","state","shiftTimeOfDay","shiftStartTime","shiftEndTime","isReadyToClose","handleShiftTypeChange","bind","handleContinue","render","close","value","console","log","uiObj","target","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport Staffing from \"./staffing\";\r\nimport \"../../modal.css\";\r\nimport { existsTypeAnnotation } from \"@babel/types\";\r\n\r\n\r\nclass ShiftPattern extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleShiftTypeChange = this.handleShiftTypeChange.bind(this);\r\n\t\tthis.handleContinue = this.handleContinue.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tshiftTimeOfDay: \"Day\",\r\n\t\tshiftStartTime: \"08:00\",\r\n\t\tshiftEndTime: \"20:00\",\r\n\t\tisReadyToClose: false\r\n\t};\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div class=\"container\">\r\n\r\n\t\t\t\t<Popup \r\n\t\t\t\t\ttrigger={<button className=\"button\"> Open Modal </button>}\r\n\t\t\t\t\tmodal\r\n\t\t\t\t\tcloseOnDocumentClick\r\n\t\t\t\t>\r\n\r\n\t\t\t\t{close => ( \r\n\t\t\t\t\t\r\n\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t<div class=\"text-center header\">\r\n\t\t\t\t\t<h3>Progress</h3>\r\n\t\t\t\t\t<progress value=\"0\" max=\"100\"></progress>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h5>Please fill in all fields.</h5>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t<h6>Day or Night shift:</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t<select selected={this.state.shiftTimeOfDay} onChange={this.handleShiftTypeChange} name=\"Shift type\">\r\n\t\t\t\t\t\t\t<option value=\"Day\">Day</option>\r\n\t\t\t\t\t\t\t<option value=\"Night\">Night</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t<h6>Shift start time:</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t\t<input ref={value => this.shiftStartTime = value} step=\"3600\" type=\"time\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t<h6>Shift end time:</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t\t<input ref={value => this.shiftEndTime = value} step=\"3600\" type=\"time\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div class=\"wrapper text-center\">\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t<button disabled>Previous</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"inline\">\r\n\t\t\t\t\t\t\t<button onClick={() => this.handleContinue()}>Continue</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button \r\n\t\t\t\t\tref=\"closeButton\"\r\n\t\t\t\t\tonClick={() => { \r\n\t\t\t\t\t\tconsole.log(\"modal closed \"); \r\n\t\t\t\t\t\t{this.state.isReadyToClose === true && close();} \r\n\t\t\t\t\t\t}}> test\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t</div>\t\r\n\t\t\t\t)} \r\n\t\t\t\t</Popup>\r\n\r\n    \t</div>\t\r\n\r\n\t\t);\r\n\t}\r\n\r\n\thandleShiftTypeChange(uiObj) {\r\n\t\t//Day/Night from UI element\r\n\t\tconst value = uiObj.target.value;\r\n\r\n\t\t//Set user input to state\r\n\t\tthis.setState({shiftTimeOfDay: value});\t\r\n\r\n\t\t//TODO: ShiftPattern.jsx --> Set default time\r\n\t}\r\n\r\n\thandleContinue() {\r\n\t\t//Get values from UI element\r\n\t\tconst shiftStartTime = this.shiftStartTime.value;\r\n\t\tconst shiftEndTime = this.shiftEndTime.value;\r\n\r\n\t\tconsole.log(shiftStartTime + \" - \" + shiftEndTime);\r\n\r\n\t\t//Validation\r\n\t\tif (this.state.shiftTimeOfDay.value === \"Day\") {\r\n\t\t\tif (shiftStartTime > shiftEndTime) {\r\n\t\t\t\tconsole.log(\"End time can't be before start time with current shift type. Solution: 1. You may have put wrong shift type (day/night). 2. You may switched AM/PM at time box. 3. Times may be incorrect.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (shiftStartTime < shiftEndTime) {\r\n\t\t\t\tconsole.log(\"Start time can't be before end time with current shift type. Solution: 1. You may have put wrong shift type (day/night). 2. You may switched AM/PM at time box. 3. Times may be incorrect.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//Save variables to state\r\n\t\tthis.setState({shiftStartTime: shiftStartTime})\r\n\t\tthis.setState({shiftEndTime: shiftEndTime})\r\n\r\n\t\t//Flag to allow user to close modal\r\n\t\tthis.setState({isReadyToClose: true});\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\nexport default ShiftPattern;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}