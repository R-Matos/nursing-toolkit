{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RM-PC\\\\Desktop\\\\Documents\\\\Development\\\\Eclipse\\\\allocation\\\\src\\\\App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navigation from './components/navigation';\nimport MongoDB from 'mongodb';\n\nfunction App() {\n  //MongoDB stuff\n  const MongoClient = require('mongodb').MongoClient;\n\n  const url = 'mongodb://localhost:27017';\n  const dbName = 'nursetoolkit';\n  const client = new MongoClient(url, {\n    poolSize: 10,\n    ssl: true\n  });\n  client.connect(function (err) {\n    console.error(err);\n    console.log(\"MongoDB - connected correctly to server\");\n    client.close();\n    const db = client.db(dbName);\n  });\n  /*   MongoClient.connect(url, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    }, (err, client) => {\n      if (err) {\n        console.error(err)\n        return\n      }\n      //...\n    }) */\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/RM-PC/Desktop/Documents/Development/Eclipse/allocation/src/App.js"],"names":["React","Navigation","MongoDB","App","MongoClient","require","url","dbName","client","poolSize","ssl","connect","err","console","error","log","close","db"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAKA,SAASC,GAAT,GAAe;AAEb;AACA,QAAMC,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC;;AACA,QAAME,GAAG,GAAG,2BAAZ;AACA,QAAMC,MAAM,GAAG,cAAf;AAEA,QAAMC,MAAM,GAAG,IAAIJ,WAAJ,CAAgBE,GAAhB,EAAqB;AACpCG,IAAAA,QAAQ,EAAE,EAD0B;AACtBC,IAAAA,GAAG,EAAE;AADiB,GAArB,CAAf;AAIAF,EAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,GAAV,EAAe;AAC5BC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAC,IAAAA,OAAO,CAACE,GAAR,CAAY,yCAAZ;AAEAP,IAAAA,MAAM,CAACQ,KAAP;AAEA,UAAMC,EAAE,GAAGT,MAAM,CAACS,EAAP,CAAUV,MAAV,CAAX;AACD,GAPD;AASF;;;;;;;;;;;AAaE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAeD;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navigation from './components/navigation'\nimport MongoDB from 'mongodb';\n\n\n\n\nfunction App() {\n\n  //MongoDB stuff\n  const MongoClient = require('mongodb').MongoClient\n  const url = 'mongodb://localhost:27017'\n  const dbName = 'nursetoolkit'\n\n  const client = new MongoClient(url, {\n  poolSize: 10, ssl: true\n  });\n\n  client.connect(function (err) {\n    console.error(err);\n    console.log(\"MongoDB - connected correctly to server\");\n\n    client.close();\n    \n    const db = client.db(dbName);\n  });\n\n/*   MongoClient.connect(url, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }, (err, client) => {\n    if (err) {\n      console.error(err)\n      return\n    }\n    //...\n  }) */\n\n\n\n  return (        \n    <div className=\"App\">\n\n      <Navigation />\n\n      <header className=\"App-header\">\n        \n      \n         \n      </header>\n    </div>\n\n    \n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}